用单引号代替双引号来包含字符串，这样做会更快一些。

因为PHP会在双引号包围的字符串中搜寻变量，单引号则 不会，注意：只有echo能这么做，它是一种可以把多个字符串当作参数的“函数”
(译注：PHP手册中说echo是语言结构，不是真正的函数，故把函数加 上了双引号)。

   1、如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍。

   2、$row[’id’] 的速度是$row[id]的7倍。

   3、echo 比 print 快，并且使用echo的多重参数(译注：指用逗号而不是句点)代替字符串连接，比如echo $str1,$str2。

   4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替。

   5、注销那些不用的变量尤其是大数组，以便释放内存。

   6、尽量避免使用__get，__set，__autoload。

   7、require_once()代价昂贵。

　　8、include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。

　　9、如果你想知道脚本开始执行(译注：即服务器端收到客户端请求)的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。

　　10、函数代替正则表达式完成相同功能。

　　11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。

　　12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，
       使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。

　　13、使用选择分支语句(译注：即switch case)好于使用多个if，else if语句。

　　14、用@屏蔽错误消息的做法非常低效，极其低效。

　　15、打开apache的mod_deflate模块，可以提高网页的浏览速度。

　　16、数据库连接当使用完毕时应关掉，不要用长连接。

　　17、错误消息代价昂贵。

　　18、在方法中递增局部变量，速度是最快的。几乎与在函数中调用局部变量的速度相当。

　　19、递增一个全局变量要比递增一个局部变量慢2倍。

　　20、递增一个对象属性(如：$this->prop++)要比递增一个局部变量慢3倍。
